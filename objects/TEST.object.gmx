<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>spr_witch_purple_hover_left</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>gamepad_index = 0;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>GetControlsGamepad();
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>var half_width = ((bbox_right-bbox_left)/2);
var half_height = ((bbox_bottom-bbox_top)/2);

var dir = 360-point_direction(0,0,horizontalAxis,verticalAxis);
var dist = point_distance(0,0,horizontalAxis,verticalAxis);
m_array = matrix_build(0, 0, 0, 0, 0, dir,1 , 1, 1);
matrix_set(matrix_world, m_array);
a = d3d_transform_vertex( -half_width, -half_height, 0);
b = d3d_transform_vertex( half_width, -half_height, 0);
c = d3d_transform_vertex( half_width, half_height, 0);
d = d3d_transform_vertex( -half_width, half_height, 0);


f = d3d_transform_vertex(horizontalAxis * half_width * 0.5, verticalAxis * half_height * 0.5, 0);

m_array = matrix_build(f[0],f[1],0,0,0,0,1-(dist*0.3),1+(dist*0.3) , 1);
matrix_set(matrix_world, m_array);
a = d3d_transform_vertex( a[0],a[1], 0);
b = d3d_transform_vertex( b[0],b[1], 0);
c = d3d_transform_vertex( c[0],c[1], 0);
d = d3d_transform_vertex( d[0],d[1], 0);

m_array = matrix_build(0,0,0,0,0,-dir,1 ,1, 1);
matrix_set(matrix_world, m_array);
a = d3d_transform_vertex( a[0],a[1], 0);
b = d3d_transform_vertex( b[0],b[1], 0);
c = d3d_transform_vertex( c[0],c[1], 0);
d = d3d_transform_vertex( d[0],d[1], 0);

d3d_transform_set_identity();
draw_sprite_pos(sprite_index, image_index, 
  x+a[0],y+a[1], 
  x+b[0],y+b[1], 
  x+c[0],y+c[1], 
  x+d[0],y+d[1],1 
);


</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
