<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>spr_parachute</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>global.parachute = id;
verticalSpeed = 0;
horizontalSpeed = 0;
maxVerticalSpeed = 20;
falling = true;
grounded = false;
rotationSpeed = 1;
color = c_maroon;
sprite_angle = 0;
parent = noone;

loaded = 0;
loadCount = 5;
loadTime = 3000000;
deployed = false;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if(parent == noone) {
  Gravity();
  Collision(obj_collidable,true,true);
  grounded = IsGrounded(obj_collidable);
  if(!grounded) {
    Rotate(horizontalSpeed,false);
  }
  Translate();
} else {
  x = parent.x;
  y = parent.y;
  verticalSpeed = parent.verticalSpeed;
  if(deployed) {
    parent.verticalSpeed = 0.1;
  } else {
    if(parent.damageColor &gt; 0) {
      parent = noone;
      loaded = 0;
      loadCount = 5;
      horizontalSpeed += random_range(-4,4);
      verticalSpeed += random_range(-4,4);
    }
  }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if(parent != noone) {
    if(!deployed) {
      loaded += global.timeScale * delta_time;
      if(loaded &gt;= loadTime) {
        loadCount--;
        loaded = 0;
      }
    }
    for(var i = 0; i &lt; loadCount; i++) {
      var pos = MoveTowards(18+(i*-72),20);
      draw_sprite(spr_dot,0,x+pos[0],y+pos[1]);
    }
    if(loadCount == 0) {
      deployed = true;
      draw_sprite(spr_parachute_deployed,0,x,y);
    }
} else {
  if(y &lt; view_yview[0]) {
    draw_sprite(spr_para_display,0,x,view_yview + 26);
  }
  if(y &gt; view_yview[0]+view_hview[0]) {
     draw_sprite(spr_para_display,0,x,view_yview[0]+view_hview[0] - 26);
  }
}


draw_sprite_ext(sprite_index, 0, x, y, image_xscale, image_yscale, sprite_angle, image_blend, image_alpha);
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
