<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>spd = 20;//random_range(20,30);

horizontalSpeed = random_range(-1,1)*spd;
verticalSpeed = random_range(-1,1)*spd;
rotationSpeed = horizontalSpeed;
maxVerticalSpeed = 20;
hit = false;
sprite_angle = 0;
characterType = "ninja";
part = "head";
sprite = asset_get_index("spr_" + characterType + "_"+part);

created_on = 0;
particleDelay = irandom_range(3000000,5000000);

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>Gravity();
Collision(obj_collidable,true,true);
Movement();
Rotate();
sprite = asset_get_index("spr_" + characterType + "_"+part);
sprite_index = sprite;

if(grounded) {
  horizontalSpeed -= sign(horizontalSpeed);
  rotationSpeed = horizontalSpeed;
}


if(created_on + particleDelay &gt; get_timer()) {
  var bloodSpurtParticle = part_type_create();
  part_type_shape(bloodSpurtParticle, pt_shape_square);
  part_type_size(bloodSpurtParticle, 0.02, 0.04, 0, 0);
  //part_type_scale(bloodSpurtParticle, 1, 1);
  part_type_colour1(bloodSpurtParticle, c_red);
  part_type_alpha2(bloodSpurtParticle, 1, 0);
  part_type_speed(bloodSpurtParticle, 3, 9, 0, 0);
  part_type_direction(bloodSpurtParticle, image_angle - 2, image_angle + 2, 0, 0);
  part_type_gravity(bloodSpurtParticle, 0.50, 270);
  part_type_orientation(bloodSpurtParticle, 0, 0, 0, 0, 1);
  //part_type_blend(bloodParticles, 0);
  part_type_life(bloodSpurtParticle, room_speed*1, room_speed*1.2);
  part_particles_create(global.particleSystem, x, y, bloodSpurtParticle, 1);
}

if(created_on + 30000000 &lt; get_timer()) {
  instance_destroy();
}

</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
