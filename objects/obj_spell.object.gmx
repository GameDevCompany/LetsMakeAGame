<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>spr_spell</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>owner = noone;
visible = true;
attackPower = 0.3;
color = c_white;
falling = false;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>image_xscale = attackPower*4;
image_yscale = attackPower*4;

part_type_alpha2(global.spellParticles, 0.5, 0);
part_type_size(global.spellParticles,attackPower,attackPower, 0, 0.2);
part_type_colour1(global.spellParticles, color);
part_particles_create(global.particleSystem, x, y, global.spellParticles, 2);

var inst = instance_place(x, y, obj_collidable);
if(inst != noone &amp;&amp; inst != owner) {
  with(inst) {
    if(falling) {
      bubbled = true;
      verticalSpeed *= 0.5;
      horizontalSpeed *= 0.5;
      bubbledTime = global.time;
    } else {
      var objects;
      objects[0] = spr_cauldron;
      objects[1] = spr_broom;
      objects[2] = spr_chair;
      objects[3] = spr_cat;
      var inst2 = instance_create(x,y,obj_falling_object);
      with(inst2) {
        falling = true;
        grav = -0.1;
        sprite_index = objects[random_range(0,array_length_1d(objects))];
        horizontalSpeed = random_range(-1,1);
        verticalSpeed = random_range(-4,-10);
      }
      
      instance_create(x,y,screen_shake);
      
      part_particles_create(global.particleSystem,x,y,global.brokenCobble,random_range(2,6));
      instance_destroy();
    }
  }
  attackPower -= 0.5;
  if(attackPower &lt;= 0) {
    instance_destroy();
  }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>draw_sprite_ext(sprite_index, image_index, x, y, image_xscale, image_yscale, image_angle, image_blend, 0);
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
